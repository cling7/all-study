/*
  ts编译的配置文件，ts编译器可以根据它的信息来对代码进行编译

  include：路径，**表示任意目录,*表示任意文件

  exclude: 表示不需要被编译,默认值为["node-modules","bower_components","jspm_packages"]

  extends:定义被继承的配置文件，类似于引入某个文件

  files:指定被编译的文件列表,需要编译的文件少时使用
      实例：
        files:[
          "core1.ts",
          "core2.ts",
          "core3.ts",
          "core4.ts",
          "core5.ts",
          "core6.ts",
          "core7.ts"
        ]

  compilerOptions: 编译选项
        target  用来指定js编译的版本 (ESNext：表示es的最新版本)
                'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'esnext'
        module  指定要使用的模块化规范（）
                'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'esnext' 
        lib：用来指定项目中要用到的库 默认常用的,一般情况下不写
        outDir：指定编译后的文件存放目录
        outFile: 可以讲编译后的代码合并为一个文件
        allowJs: 是否对js文件进行编译，默认false
        checkJs: 是否检查js文件中的代码符合TS规范，默认false
        removeComments: 是否在编译后移除注释，默认false
        noEmit: 编译依然进行，但不生成编译后的文件，默认false
        noEmitOnError: 当有错误的时候不生成编译的文件，默认false
        alwaysStrict: 设置编译后的文件是否使用严格模式，默认false
*/
{
  // "include": [
  //   "./src/**/*"
  // ],
  "exclude": [
    "./app/**/*"
  ],
  "compilerOptions": {
    "target": "ES6",
    // "lib":["Dom"]
    "outDir": "./dist",
    "outFile": "./dist/app.js",
    "allowJs": false,
    "checkJs": false,
    "removeComments": false,
    "noEmit": false,
    "noEmitOnError": false,
    "alwaysStrict": false
  }
}